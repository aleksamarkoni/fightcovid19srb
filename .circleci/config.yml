version: 2
jobs:
  build_dev:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx2048m
      GRADLE_OPTS: -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false
    gems_key: &gems_key
                gems-{{ checksum "Gemfile.lock" }}
    restore_gems_cache: &restore_gems_cache
      restore_cache:
        key: *gems_key
    save_gems_cache: &save_gems_cache
      save_cache:
        key: *gems_key
        paths:
          - vendor/bundle
    bundler_install: &bundler_install
      run:
        name: install bundler
        command: |
          gem update --system
          gem install bundler
    ruby_dependencies: &ruby_dependencies
      run:
        name: Download Ruby Dependencies
        command: bundle check || bundle install --path vendor/bundle
    create_keystore_properties: &create_keystore_properties
      run:
        name: Create keystore.properies
        command: printf 'releaseKeyAlias=%s\nreleaseKeyPassword=%s\ndebugKeyStore=%s\nreleaseStorePassword=%s' $RELEASE_KEY_ALIAS $RELEASE_KEY_PASSWORD $RELEASE_KEYSTORE $RELEASE_STORE_PASSWORD > keystore.properties
    decode_android_key: &decode_android_key
      run:
        name: Create debug.keystore.jks
        command: echo $DEV_KEYSTORE | base64 -d > $RELEASE_KEYSTORE
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "mobile/build.gradle" }}
      - *create_keystore_properties
      - *decode_android_key
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "mobile/build.gradle" }}
      - run:
          name: assembleDev
          command: ./gradlew assembleDevRelease
      - store_artifacts:
          path: mobile/build/outputs/apk
          destination: apks
  deploy_dev:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      _JAVA_OPTIONS: "-Xms512m -Xmx1024m"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
      FASTLANE_LANE: distribute
    steps:
      - checkout
      - *bundler_install
      - *restore_gems_cache
      - *ruby_dependencies
      - *save_gems_cache
      - *create_keystore_properties
      - *decode_android_key
      - run:
          name: Install firebase
          command: curl -sL firebase.tools | bash
      - run:
          name: Echo Deploy
          command: echo "deploying dev"
      - run: bundle -v
      - run:
          name: fastlane
          command: bundle exec fastlane distributeDev
workflows:
  version: 2
  build_all:
    jobs:
      - build_dev:
          filters:
            branches:
              only:
                - develop
      - deploy_dev:
          requires:
            - build_dev
          filters:
            branches:
              only:
                - develop
            tags:
              only: /^v*/